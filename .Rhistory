})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
library(Ryacas)
require(Ryacas)
library(ContinuousRV)
require(ContinuousRV)
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
as.function(f_x) %>% "Factor"
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
library(Ryacas)
require(Ryacas)
library(ContinuousRV)
require(ContinuousRV)
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
print(f_x)
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
x <- ysym('x')
y <- ysym('y')
fun <- function(x, y) {
x**2 + y
}
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
fun/f_x
x <- ysym('x')
y <- ysym('y')
fun <- function(x, y) {
x**2 + y
}
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f <- function(x) {}
body(f) <- as_r(f_x)
fun/f_x
library(Ryacas)
require(Ryacas)
library(ContinuousRV)
require(ContinuousRV)
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
f_x %>% y_fn("Factor")
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
x <- ysym('x')
y <- ysym('y')
fun <- function(x, y) {
x**2 + y
}
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f <- function(x) {}
body(f) <- as_r(f_x)
fun/f_x
x <- ysym('x')
y <- ysym('y')
fun <- function(x, y) {
x**2 + y
}
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f <- function(x) {}
body(f) <- as_r(f_x)
fun/f_x
yac_expr(f_x$yacas_cmd/fun$yacas_cmd)
yac_expr(f_x$yacas_cmd/fun)
yac_expr(f_x$yacas_cmd/as.expression(fun))
yac_expr(f_x$yacas_cmd)
yac_expr(f_x$yacas_cmd + "k")
library(Ryacas)
require(Ryacas)
library(ContinuousRV)
require(ContinuousRV)
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
print(f_x)
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
f <- function(x) {
if(x < 2){
x^2 + 7
}
else {
exp(1)^x - 2*x^2 - 3
}
}
integrate(f, lower = -Inf, upper = Inf)
f <- function(x) {
if(x < 2){
0
}
else {
exp(1)^x - 2*x^2 - 3
}
}
integrate(f, lower = -Inf, upper = Inf)
f <- function(x) {
if(x < 2){
0
}
else {
exp(1)^x - 2*x^2 - 3
}
}
integrate(f, lower = -Inf, upper = 2)
f <- function(x) {
if(x < 2){
0
}
else {
exp(1)^x - 2*x^2 - 3
}
}
integrate(f, lower = -Inf, upper = 1)
library(ContinuousRV)
detach("package:ContinuousRV", unload = TRUE)
library(ContinuousRV)
library(ContinuousRV)
print(f_x + '/')
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
print(f_x)
print(f_y)
print(f_x + '/')
return(NA)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
CRV.computeMargDen(X, Y, com)
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
CRV.computeMargDen(X, Y, com)
library(Ryacas)
library(Ryacas)
CRV.computeMargDen(X, Y, com)
CRV.computeMargDen(X, Y, com)
CRV.computeMargDen(X, Y, com)
CRV.computeMargDen(X, Y, com)
library(ContinuousRV)
library(ContinuousRV)
CRV.computeMargDen(X, Y, com)
CRV.computeMargDen(X, Y, com)
library(ContinuousRV)
CRV.computeMargDen(X, Y, com)
CRV.computeMargDen(X, Y, com)
deparse(com)
deparse(com)[1]
deparse(com)[2]
deparse(com)[3]
trimws(deparse(com)[3])
library(ContinuousRV)
library(ContinuousRV)
CRV.computeMargDen(X, Y, com)
library(ContinuousRV)
CRV.computeMargDen(X, Y, com)
CRV.computeMargDen(X, Y, com)
library(ContinuousRV)
library(ContinuousRV)
CRV.computeMargDen(X, Y, com)
CRV.computeMargDen(X, Y, com)
library(ContinuousRV)
CRV.computeMargDen(X, Y, com)
CRV.computeMargDen(X, Y, com)
library(ContinuousRV)
library(ContinuousRV)
CRV.computeMargDen(X, Y, com)
CRV.computeMargDen(X, Y, com)
library(ContinuousRV)
library(ContinuousRV)
CRV.computeMargDen(X, Y, com)
CRV.computeMargDen(X, Y, com)
library(ContinuousRV)
CRV.computeMargDen(X, Y, com)
library(ContinuousRV)
CRV.computeMargDen(X, Y, com)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
X <- CRV(fun = function(x){x**2}, lo = 0, hi = 1)
X
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
ls
ls
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
fun = function(x){x**2 -3*x + 1}
normalizingConstant(fun)
normalizingConstant(fun, -2, 7)
fractions(0.01709402)
library(MASS)
fractions(0.01709402)
fun <- function(x) {(2/117) * (x**2 -3*x + 1)}
isPDF(fun)
fun <- function(x) {(x**2 + 3*x + 1)}
normalizingConstant(fun)
normalizingConstant(fun, -2, 7)
fractions(0.005167959)
fun <- function(x) {(2/387) * (x**2 + 3*x + 1)}
isPDF(fun, -2, 7)
data <- seq(lower_bound, upper_bound, length.out = 10000)
data <- seq(-2, 7, length.out = 10000)
results <- apply(as.data.frame(data), MARGIN = 1, FUN = fun)
which(results < 0)
results
length(which(results < 0))
length(which(results > 0))
X <- CRV(fun = function(x){(2/387) * (x**2 + 3*x + 1)}, lo = 0, hi = 12/13)
fun <- function(x){(x**2 + 3*x + 1)}
fun
normalizingConstant(fun, 0, 12/13)
fractions(normalizingConstant(fun, 0, 12/13))
fun <- function(x) {(2197/5412) * (x**2 + 3*x + 1)}
isPDF(fun)
isPDF(fun, 0, 12/13)
moments <- CRV.computeInitMom(X
)
moments
fractions(moments)
library(ContinuousRV)
library(ContinuousRV)
library(ContinuousRV)
X <- CRV(fun = function(x){(2197/5412) * (x**2 + 3*x + 1)}, lo = 0, hi = 12/13)
moments <- CRV.computeCentrMom(X)
library(MASS)
fractions(moments)
library(ContinuousRV)
X
X %<% 3
"%<%" <- function(X, x) {}
setMethod("%<%", "ContinuousRV", function(X, x){})
setMethod("%<%", "ContinuousRV", function(X, x){if(class(X) == "ContinuousRV") {
return(c(X@lo, min(x, X@hi)))
}})
X < 3
X %<% 3
X %<% 1
X
1 %<% X
X %<% 1
X %<% 10
X@hi
library(ContinuousRV)
X <- CRV(fun = function(x){(2197/5412) * (x**2 + 3*x + 1)}, lo = 0, hi = 12/13)
X %<% 1
X%<%1
x<1
X < 1
X<x
deparse(X<x)
X<1
X%<%1
CRV.computeP(X, c(X@lo, 3))
library(ContinuousRV)
CRV.computeP(X, c(X@lo, 3))
CRV.computeP(X, c(X@lo, 0.5))
library(ContinuousRV)
#8.Afișarea unei “fișe de sinteză” care să conțină informații de bază despre respectiva
#repartiție(cu precizarea sursei informației!). Relevant aici ar fi să precizați pentru ce e
#folosită ȋn mod uzual acea repartiție, semnificația parametrilor, media, dispersia etc.
fisa <- function() {
install.packages("magick")
text = "1"
print(text)
while (text != "0"){
cat("\nRegasim urmatoarele repartitii\n1.Uniforma\n2.Exponentiala\n3.Normala\n4.Hi Patrat\n5.Student/T\n6.Surse\n0.Iesire\nAlege una dintre Repartitii: ")
text <- readline()
result = switch(
text,
"1" = "uniforma.png",
"2" = 'exponentiala.png',
"3" = 'normala.png',
"4" = 'hi-patrat.png',
"5" = 'student.png',
"6" = cat("Am folosit urmatoarele surse pentru aceste informatii:\n
http://cs.unitbv.ro/~pascu/stat/Distributii%20continue%20clasice.pdf\n
http://software.ucv.ro/~cstoica/MSSC/lab%204%20distributii.pdf\n
http://sorana.academicdirect.ro/pages/doc/MV2012/MVRom04.pdf\n
https://www.afahc.ro/ro/facultate/cursuri/luculescu/4.%20Functii%20de%20repartitie.pdf\n
http://dep2.mathem.pub.ro/pdf/didactice/Probabilitati%20si%20statistica.pdf\n
http://images.wikia.com/nccmn/ro/images/3/37/Capitolul_10_REPARTITII_CLASICE.pdf\n
https://analizamatematicampt.files.wordpress.com/2010/09/cap7pdf.pdf\n
https://www.info.umfcluj.ro/index.php?option=com_k2&view=item&task=download&id=4076_836d9dea9d3c276b0af1baf89b2db214&Itemid=1005&lang=ro\n")
)
if(text == "1" | text == "2" | text == "3" | text == "4" | text == "5")
{
img1 <- magick::image_read(paste(result, sep = ""))
plot(img1)
}
}
}
fisa()
install.packages("magick")
install.packages("magick")
library(magick)
#8.Afișarea unei “fișe de sinteză” care să conțină informații de bază despre respectiva
#repartiție(cu precizarea sursei informației!). Relevant aici ar fi să precizați pentru ce e
#folosită ȋn mod uzual acea repartiție, semnificația parametrilor, media, dispersia etc.
require(magick)
library(magick)
fisa <- function() {
text = "1"
print(text)
while (text != "0"){
cat("\nRegasim urmatoarele repartitii\n1.Uniforma\n2.Exponentiala\n3.Normala\n4.Hi Patrat\n5.Student/T\n6.Surse\n0.Iesire\nAlege una dintre Repartitii: ")
text <- readline()
result = switch(
text,
"1" = "uniforma.png",
"2" = 'exponentiala.png',
"3" = 'normala.png',
"4" = 'hi-patrat.png',
"5" = 'student.png',
"6" = cat("Am folosit urmatoarele surse pentru aceste informatii:\n
http://cs.unitbv.ro/~pascu/stat/Distributii%20continue%20clasice.pdf\n
http://software.ucv.ro/~cstoica/MSSC/lab%204%20distributii.pdf\n
http://sorana.academicdirect.ro/pages/doc/MV2012/MVRom04.pdf\n
https://www.afahc.ro/ro/facultate/cursuri/luculescu/4.%20Functii%20de%20repartitie.pdf\n
http://dep2.mathem.pub.ro/pdf/didactice/Probabilitati%20si%20statistica.pdf\n
http://images.wikia.com/nccmn/ro/images/3/37/Capitolul_10_REPARTITII_CLASICE.pdf\n
https://analizamatematicampt.files.wordpress.com/2010/09/cap7pdf.pdf\n
https://www.info.umfcluj.ro/index.php?option=com_k2&view=item&task=download&id=4076_836d9dea9d3c276b0af1baf89b2db214&Itemid=1005&lang=ro\n")
)
if(text == "1" | text == "2" | text == "3" | text == "4" | text == "5")
{
img1 <- magick::image_read(paste(result, sep = ""))
plot(img1)
}
}
}
fisa()
#8.Afișarea unei “fișe de sinteză” care să conțină informații de bază despre respectiva
#repartiție(cu precizarea sursei informației!). Relevant aici ar fi să precizați pentru ce e
#folosită ȋn mod uzual acea repartiție, semnificația parametrilor, media, dispersia etc.
require(magick)
library(magick)
fisa <- function() {
text = "1"
print(text)
while (text != "0"){
cat("\nRegasim urmatoarele repartitii\n1.Uniforma\n2.Exponentiala\n3.Normala\n4.Hi Patrat\n5.Student/T\n6.Surse\n0.Iesire\nAlege una dintre Repartitii: ")
text <- readline()
result = switch(
text,
"1" = "uniforma.png",
"2" = 'exponentiala.png',
"3" = 'normala.png',
"4" = 'hi-patrat.png',
"5" = 'student.png',
"6" = cat("Am folosit urmatoarele surse pentru aceste informatii:\n
http://cs.unitbv.ro/~pascu/stat/Distributii%20continue%20clasice.pdf\n
http://software.ucv.ro/~cstoica/MSSC/lab%204%20distributii.pdf\n
http://sorana.academicdirect.ro/pages/doc/MV2012/MVRom04.pdf\n
https://www.afahc.ro/ro/facultate/cursuri/luculescu/4.%20Functii%20de%20repartitie.pdf\n
http://dep2.mathem.pub.ro/pdf/didactice/Probabilitati%20si%20statistica.pdf\n
http://images.wikia.com/nccmn/ro/images/3/37/Capitolul_10_REPARTITII_CLASICE.pdf\n
https://analizamatematicampt.files.wordpress.com/2010/09/cap7pdf.pdf\n
https://www.info.umfcluj.ro/index.php?option=com_k2&view=item&task=download&id=4076_836d9dea9d3c276b0af1baf89b2db214&Itemid=1005&lang=ro\n")
)
if(text == "1" | text == "2" | text == "3" | text == "4" | text == "5")
{
img1 <- magick::image_read(paste(result, sep = ""))
plot(img1)
}
}
}
fisa()
library(ContinuousRV)
