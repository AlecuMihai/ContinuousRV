f <- functions
f
f()
f(2)
library(Ryacas)
require("Ryacas")
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
out_x <- function(x) {}
body(out_x) <- as_r(f_x)
out_y <- function(y) {}
body(out_y) <- as_r(f_y)
return(list(as.function(out_x), as.function(out_y)))
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
functions
f <- functions[1]
f
f(2)
library(Ryacas)
require("Ryacas")
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
out_x <- function(x) {}
body(out_x) <- as_r(f_x)
out_y <- function(y) {}
body(out_y) <- as_r(f_y)
print(out_x)
print(out_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
library(Ryacas)
require("Ryacas")
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
out_x <- function(x) {}
body(out_x) <- as_r(f_x)
out_y <- function(y) {}
body(out_y) <- as_r(f_y)
print(f_x)
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
library(Ryacas)
require("Ryacas")
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
print(f_x)
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
library(Ryacas)
require("Ryacas")
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
print("F_x(X) = ", f_x)
print("F_y(y) = ", f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
library(Ryacas)
require("Ryacas")
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
print("F_x(X) = ", yac_str(f_x))
print("F_y(y) = ", yac_str(f_x))
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
library(Ryacas)
require("Ryacas")
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
print(f_x)
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
library(Ryacas)
require("Ryacas")
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
print(f_x)
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
library(Ryacas)
require("Ryacas")
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
print(f_x %>% "Factor")
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
library(ContinuousRV)
library(Ryacas)
require(Ryacas)
library(ContinuousRV)
require(ContinuousRV)
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
print(f_x %>% "Factor")
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
library(Ryacas)
require(Ryacas)
library(ContinuousRV)
require(ContinuousRV)
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
f_x %>% "Factor"
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
library(Ryacas)
require(Ryacas)
library(ContinuousRV)
require(ContinuousRV)
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
as_r(f_x) %>% "Factor"
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
library(Ryacas)
require(Ryacas)
library(ContinuousRV)
require(ContinuousRV)
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
class(f_x)
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
library(Ryacas)
require(Ryacas)
library(ContinuousRV)
require(ContinuousRV)
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
as.function(f_x) %>% "Factor"
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
library(Ryacas)
require(Ryacas)
library(ContinuousRV)
require(ContinuousRV)
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
print(f_x)
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
x <- ysym('x')
y <- ysym('y')
fun <- function(x, y) {
x**2 + y
}
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
fun/f_x
x <- ysym('x')
y <- ysym('y')
fun <- function(x, y) {
x**2 + y
}
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f <- function(x) {}
body(f) <- as_r(f_x)
fun/f_x
library(Ryacas)
require(Ryacas)
library(ContinuousRV)
require(ContinuousRV)
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
f_x %>% y_fn("Factor")
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
x <- ysym('x')
y <- ysym('y')
fun <- function(x, y) {
x**2 + y
}
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f <- function(x) {}
body(f) <- as_r(f_x)
fun/f_x
x <- ysym('x')
y <- ysym('y')
fun <- function(x, y) {
x**2 + y
}
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f <- function(x) {}
body(f) <- as_r(f_x)
fun/f_x
yac_expr(f_x$yacas_cmd/fun$yacas_cmd)
yac_expr(f_x$yacas_cmd/fun)
yac_expr(f_x$yacas_cmd/as.expression(fun))
yac_expr(f_x$yacas_cmd)
yac_expr(f_x$yacas_cmd + "k")
library(Ryacas)
require(Ryacas)
library(ContinuousRV)
require(ContinuousRV)
CRV.computeMargDen <- function(X, Y, fun) {}
setMethod("CRV.computeMargDen", "ContinuousRV", function(X, Y, fun){
if(class(X) != "ContinuousRV" | class(Y) != "ContinuousRV") {
stop("Unfitting object.class")
return()
}
x <- ysym('x')
y <- ysym('y')
integrand.x <- integrate(fun(x, y), y)
integrand.y <- integrate(fun(x, y), x)
f_x <- eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@hi)) -
eval(yac_expr(integrand.x$yacas_cmd), list(y = Y@lo))
f_y <- eval(yac_expr(integrand.y$yacas_cmd), list(x = X@hi)) -
eval(yac_expr(integrand.y$yacas_cmd), list(x = X@lo))
print(f_x)
print(f_y)
})
X <- CRV(fun = function(x) {x}, lo = 0, hi = 1)
Y <- CRV(fun = function(x) {x}, lo = 0, hi = 2)
com <- function(x, y) {
0.2 * (x + y + 1)
}
functions <- CRV.computeMargDen(X, Y, com)
